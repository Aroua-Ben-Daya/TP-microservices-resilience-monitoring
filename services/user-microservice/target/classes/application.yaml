spring:
  application:
    name: user-microservice # Nom de l'application pour identification dans Eureka

  cloud:
    config:
      uri: http://localhost:8888 # Adresse de votre Config Server
      import: "optional:config-server:" # Utilisation correcte de configserver avec optional pour éviter l'erreur
    import-check:
      enabled: false # Désactiver la vérification de l'importation de configuration

  eureka:
    client:
      service-url:
        defaultZone: http://localhost:8761 # Adresse de votre Eureka Server

  # Configuration de la base de données
  datasource:
    url: jdbc:mysql://localhost:3306/user
    username: root
    password: azerty12346
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Configuration JPA
  jpa:
    hibernate:
      ddl-auto: update # Permet à Hibernate de mettre à jour le schéma
    show-sql: true # Affiche les requêtes SQL dans les logs
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect # Dialecte adapté pour MySQL

management:
  tracing:
    sampling:
      probability: 1.0 # Taux d'échantillonnage pour la traçabilité (1.0 signifie que toutes les requêtes seront tracées)
  zipkin:
    endpoint: http://localhost:9411/api/v2/spans # URL du serveur Zipkin pour collecter et visualiser les traces

  # Gestion des logs et des points de gestion
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    info:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true # Active l'exportation des métriques pour Prometheus

logging:
  level:
    root: INFO # Niveau de journalisation global
    org.springframework.web: DEBUG # Niveau DEBUG pour les logs liés au web

server:
  port: 8081 # Port du serveur

resilience4j:
  retry:
    instances:
      myRetry:
        max-attempts: 3 # Nombre maximum de tentatives
        wait-duration: 500ms # Durée entre chaque tentative
  rate-limiter:
    instances:
      myRateLimiter:
        limit-for-period: 5 # Nombre de requêtes par période
        limit-refresh-period: 1s # Durée de rafraîchissement des limites
        timeout-duration: 500ms # Timeout pour les requêtes
